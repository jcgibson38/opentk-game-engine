#version 400 core

in vec2 pass_textureCoords;
in vec3 surfaceNormal;
in vec3 toLightVector;
in vec3 toCameraVector;
in float visibility;
in float worldHeight;

out vec4 outColor;

uniform sampler2D textureSamplerWaterDeep;
uniform sampler2D textureSamplerWaterShallow;
uniform sampler2D textureSamplerSand;
uniform sampler2D textureSamplerGrassNatural;
uniform sampler2D textureSamplerGrassLush;
uniform sampler2D textureSamplerMountainNatural;
uniform sampler2D textureSamplerMountainRocky;
uniform sampler2D textureSamplerSnow;

uniform vec3 lightColor;
uniform float shineDamper;
uniform float reflectivity;
uniform vec3 skyColor;

void main(void)
{
	vec3 unitNormal = normalize(surfaceNormal);
	vec3 unitLightVector = normalize(toLightVector);
	vec3 unitVectorToCamera = normalize(toCameraVector);

	float nDot1 = dot(unitNormal,unitLightVector);
	float brightness = max(nDot1,0.2);
	vec3 diffuse = brightness * lightColor;

	vec3 lightDirectionVector = -unitLightVector;
	vec3 reflectedLightDirection = reflect(lightDirectionVector,unitNormal);

	float specularLightingFactor = dot(reflectedLightDirection,unitVectorToCamera);
	specularLightingFactor = max(specularLightingFactor,0.0);
	float dampedFactor = pow(specularLightingFactor,shineDamper);
	vec3 finalSpecular = dampedFactor * reflectivity * lightColor;

	if(worldHeight < 10.0){
		outColor = vec4(diffuse,1.0) * texture(textureSamplerWaterDeep,pass_textureCoords) + vec4(finalSpecular,1.0);
	}
	else if(worldHeight < 15.0){
		outColor = vec4(diffuse,1.0) * texture(textureSamplerWaterShallow,pass_textureCoords) + vec4(finalSpecular,1.0);
	}
	else if(worldHeight < 17.50){
		outColor = vec4(diffuse,1.0) * texture(textureSamplerSand,pass_textureCoords) + vec4(finalSpecular,1.0);
	}
	else if(worldHeight < 27.50){
		outColor = vec4(diffuse,1.0) * texture(textureSamplerGrassNatural,pass_textureCoords) + vec4(finalSpecular,1.0);
	}
	else if(worldHeight < 32.50){
		outColor = vec4(diffuse,1.0) * texture(textureSamplerGrassLush,pass_textureCoords) + vec4(finalSpecular,1.0);
	}
	else if(worldHeight < 40.0){
		outColor = vec4(diffuse,1.0) * texture(textureSamplerMountainNatural,pass_textureCoords) + vec4(finalSpecular,1.0);
	}
	else if(worldHeight < 42.50){
		outColor = vec4(diffuse,1.0) * texture(textureSamplerMountainRocky,pass_textureCoords) + vec4(finalSpecular,1.0);
	}
	else{
		outColor = vec4(diffuse,1.0) * texture(textureSamplerSnow,pass_textureCoords) + vec4(finalSpecular,1.0);
	}

	outColor = mix(vec4(skyColor,1.0),outColor,visibility);
}